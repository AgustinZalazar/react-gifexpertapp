{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","key","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YCNlBG,EAAc,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACrC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAMF,EAAMG,IAAOJ,IACxB,wBAAIK,IAAMN,GAAV,IAAkBC,EAAlB,O,uBCNCM,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbP,EADa,iDACmCQ,UAAUF,GAD7C,+DAEAG,MAAOT,GAFP,cAEbU,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAM,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACHjB,GAAIiB,EAAIjB,GACRC,MAAOgB,EAAIhB,MACXC,IAAG,UAAEe,EAAIC,cAAN,aAAE,EAAYC,iBAAiBjB,QATvB,kBAYZa,GAZY,4CAAH,sDCKPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAc,IAAD,EAEbtB,mBAAS,CAC/B4B,KAAM,GACNO,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAoBvC,OAdAC,qBAAW,WAEPjB,EAASC,GACRiB,MAAM,SAAAC,GAECH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAItB,CAAEb,IAGEc,EDhB0BK,CAAcnB,GAAnCU,EAFyB,EAE9BJ,KAAaO,EAFiB,EAEjBA,QAGpB,OACI,oCACA,wBAAIlB,UAAU,qCAAsCK,GAEnDa,GAAW,wCAEZ,yBAAKlB,UAAU,aAGHe,EAAOF,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACAX,IAAOW,EAAIjB,IACNiB,UEWdW,EA5BM,WAAK,MAEc1C,mBAAS,CAAC,eAFxB,mBAEf2C,EAFe,KAEH5C,EAFG,KAQtB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BAEA,4BAEQ4C,EAAWb,KAAK,SAAAR,GAAQ,OACpB,kBAAC,EAAD,CACIF,IAAQE,EACRA,SAAaA,UClBzCsB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.8490f664.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories(cats => [ inputValue, ...cats]);\r\n            setinputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit= { handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange= { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt= { title } />\r\n            <li key={ id }> { title } </li>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=n8tpwC2mwCzuCuKHSVSZkToMUIpO6C7K`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map ( img => {\r\n        return { \r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images, loading } =  useFetchGifs( category );\r\n    \r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n        {loading && <p>Loading..</p>}\r\n\r\n        <div className=\"card-grid\">\r\n            \r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                        key ={ img.id }\r\n                        { ...img }\r\n                        />\r\n                        \r\n                    ))\r\n                }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) =>{\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n        .then( imgs => {\r\n\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            \r\n        })\r\n    }, [ category ]) \r\n\r\n\r\n    return state;\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () =>{\r\n    //const categories = [' One Punch' , 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState([' One Punch'])\r\n    \r\n    // const handleAdd = () =>{\r\n    //     setCategories( [...categories, 'HunterXHunter'] );\r\n    // }\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories= { setCategories }/>\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key = { category }\r\n                            category = { category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}   \r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}